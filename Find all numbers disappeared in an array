Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.

 

Example 1:

Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]
Example 2:

Input: nums = [1,1]
Output: [2]
 

Constraints:

n == nums.length
1 <= n <= 105
1 <= nums[i] <= n


***********code
class Solution {
public:
    vector<int> findDisappearedNumbers(vector<int>& nums) {
        vector<int>res;
        vector<int>pre(nums.size()+1);
        fill(pre.begin(),pre.end(),0);
       for(int i=0;i<nums.size();i++){
          pre[nums[i]]++;
       }

       for(int i=1;i<pre.size();i++){
          if( pre[i]==0){
            res.push_back(i);
          }
       }
       return res;
    }
};
